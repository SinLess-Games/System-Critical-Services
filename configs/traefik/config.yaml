global:
  checkNewVersion: false
  sendAnonymousUsage: false

providers:
  swarm:
    exposedByDefault: false # Services must explicitly opt-in via labels
    endpoint: "unix:///var/run/docker.sock"

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true
  websecure:
    address: ":443"
    http:
      tls:
        certResolver: cloudflare
        domains:
          - main: sinlessgamesllc.com
            sans:
              - "*.sinlessgamesllc.com"

certificatesResolvers:
  cloudflare:
    acme:
      email: disdainful777@gmail.com
      storage: /data/cloudflare-acme.json
      caServer: https://acme-v02.api.letsencrypt.org/directory
      dnsChallenge:
        provider: cloudflare
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"

log:
  level: INFO
  filePath: "/data/traefik.log" # Optional: Log to a file for debugging
  format: json

accessLog:
  filePath: "/data/access.log" # Optional: Access log
  bufferingSize: 100

api:
  dashboard: true
  insecure: false # Use secure access only; protect with Authentik

middlewares:
  authentik:
    forwardAuth:
      address: "http://authentik-server:9000/api/v1/outpost.goauthentik.io"
      trustForwardHeader: true
      authResponseHeaders:
        - "X-Authentik-Email"
        - "X-Authentik-Username"
        - "X-Authentik-Groups"

  https-redirect:
    redirectScheme:
      scheme: https
      permanent: true

http:
  middlewares:
    default-auth:
      forwardAuth:
        address: "http://authentik-server:9000/api/v1/outpost.goauthentik.io/check"
        trustForwardHeader: true

tls:
  options:
    default:
      minVersion: VersionTLS12
      cipherSuites:
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
