networks:
  frontend:
    external: true
  backend:
    external: true

x-unifi-environment: &unifi-environment
  - PUID=1000
  - PGID=1000
  - TZ=Etc/UTC
  - MONGO_USER=${MONGO_USER}
  - MONGO_PASS=${MONGO_PASS}
  - MONGO_HOST=unifi-db
  - MONGO_PORT=27017
  - MONGO_DBNAME=unifi
  - MONGO_AUTHSOURCE=admin
  - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
  - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_USERNAME}

services:
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    environment: *unifi-environment
    volumes:
      - ./.data/unifi:/config
    networks:
      - frontend
      - backend
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp # optional
      - 8843:8843 # optional
      - 8880:8880 # optional
      - 6789:6789 # optional
      - 5514:5514/udp # optional
    restart: unless-stopped
    depends_on:
      unifi-db:
        condition: service_healthy

  unifi-db:
    image: mongo:3.6
    container_name: unifi-db
    environment: *unifi-environment
    networks:
      - backend
    volumes:
      - ./.data/mongo:/data/db
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mongo", "--host", "localhost", "--eval", "db.runCommand('ping').ok" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
