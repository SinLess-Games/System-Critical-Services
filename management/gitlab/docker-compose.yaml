services:
  postgres:
    image: postgres:14
    container_name: gitlab-postgresql
    environment:
      POSTGRES_PASSWORD: ${GITLAB_DB_PASSWORD}
      POSTGRES_DB: ${GITLAB_DB_NAME}
      POSTGRES_USER: ${GITLAB_DB_USER}
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GITLAB_DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6
    container_name: gitlab-redis
    command: redis-server --appendonly yes
    volumes:
      - ./.data/redis:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=gitlab" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${GITLAB_EXTERNAL_URL}'

        # Disable Public Signup
        gitlab_rails['gitlab_signup_enabled'] = false

        # Configure PostgreSQL settings
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_host'] = 'postgres'
        gitlab_rails['db_port'] = '5432'
        gitlab_rails['db_username'] = '${GITLAB_DB_USER}'
        gitlab_rails['db_password'] = '${GITLAB_DB_PASSWORD}'
        gitlab_rails['db_database'] = '${GITLAB_DB_NAME}'

        # Configure Redis settings
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = '${GITLAB_REDIS_PORT}'

        # Enable Terraform state storage and set its path
        gitlab_rails['terraform_state_enabled'] = true
        gitlab_rails['terraform_state_storage_path'] = "/var/opt/gitlab/gitlab-rails/shared/terraform_state"

        # Letsencrypt SSL certificate
        gitlab_rails['letsencrypt_enabled'] = false

    ports:
      - "${GITLAB_SSH_PORT}:22"
      - "${GITLAB_HTTP_PORT}:80"
      - "${GITLAB_HTTPS_PORT}:443"
    volumes:
      - ./.data/gitlab/config:/etc/gitlab
      - ./.data/gitlab/logs:/var/log/gitlab
      - ./.data/gitlab/data:/var/opt/gitlab
    networks:
      - frontend
      - backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "https://gitlab.sinlessgamesllc.com/-/readiness?token=${GITLAB_READINESS_TOKEN}"]
      interval: 30s
      timeout: 10s
      retries: 3

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=gitlab-runner" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    container_name: gitlab-runner
    volumes:
      - ./.data/gitlab-runner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend
    depends_on:
      gitlab:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "gitlab-runner", "verify", "--delete"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  frontend:
    external: true
  backend:
    external: true
