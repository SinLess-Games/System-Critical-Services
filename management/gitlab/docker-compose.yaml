services:
  gitlab:
    image: gitlab/gitlab-ce:17.3.1-ce.0
    container_name: gitlab
    ports:
      - '${GITLAB_SSH_PORT}:22'
      - '${GITLAB_HTTP_PORT}:80'
      - '${GITLAB_HTTPS_PORT}:443'
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - ./.data/gitlab:/var/opt/gitlab
    shm_size: '256m'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${GITLAB_EXTERNAL_URL}'
        gitlab_rails['db_adapter'] = 'mysql2'
        gitlab_rails['db_host'] = '${GITLAB_DB_HOST}'
        gitlab_rails['db_port'] = '${GITLAB_DB_PORT}'
        gitlab_rails['db_username'] = '${GITLAB_DB_USER}'
        gitlab_rails['db_password'] = '${GITLAB_DB_PASSWORD}'
        gitlab_rails['db_database'] = '${GITLAB_DB_NAME}'
        gitlab_rails['redis_host'] = '${GITLAB_REDIS_HOST}'
        gitlab_rails['redis_port'] = '${GITLAB_REDIS_PORT}'
    networks:
      - frontend
      - backend
    restart: unless-stopped
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.gitlab"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/-/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "4G"
        reservations:
          cpus: "1.0"
          memory: "2G"
      placement:
        constraints:
          - "node.role == worker"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  gitlab-mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${GITLAB_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${GITLAB_DB_NAME}
      MYSQL_USER: ${GITLAB_DB_USER}
      MYSQL_PASSWORD: ${GITLAB_DB_PASSWORD}
    volumes:
      - ./.data/mysql:/var/lib/mysql
    networks:
      - backend
    restart: unless-stopped
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.mysql.gitlab"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "3G"
        reservations:
          cpus: "0.5"
          memory: "1G"
      placement:
        constraints:
          - "node.role == worker"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  gitlab-redis:
    image: redis:6
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - backend
    restart: unless-stopped
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.redis.gitlab"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "1G"
        reservations:
          cpus: "0.5"
          memory: "512M"
      placement:
        constraints:
          - "node.role == worker"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  gitlab_config:
  gitlab_logs:
  redis_data:


networks:
  frontend:
    external: true
  backend:
    external: true
