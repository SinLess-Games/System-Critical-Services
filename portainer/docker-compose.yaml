services:
  portainer:
    image: portainer/portainer-ce:2.24.1
    container_name: portainer
    restart: always
    environment:
      TZ: "${TZ:-UTC}"
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.portainer.rule=Host(`portainer.sinlessgamesllc.com`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=cloudflare"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.middlewares=authentik-auth@file"
      # Services
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - frontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.data/portainer:/data
    depends_on:
      traefik:
        condition: service_started
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        reservations:
          cpus: "0.25"
          memory: 256M
        limits:
          cpus: "0.50"
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  portainer-agent:
    image: portainer/agent:2.24.1
    container_name: portainer-agent
    restart: always
    labels:
      - "traefik.enable=false"
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes:ro
    environment:
      AGENT_CLUSTER_ADDR: portainer
      AGENT_PORT: 9001
      LOG_LEVEL: INFO
      TZ: "${TZ:-UTC}"
    depends_on:
      portainer:
        condition: service_started
    deploy:
      mode: global
      placement:
        constraints:
          - node.role != manager
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9001/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3