x-environment: &oncall-environment
  DATABASE_TYPE: sqlite3
  BROKER_TYPE: redis
  BASE_URL: http://grafana-oncall:8081 #URL to the oncall engine
  SECRET_KEY: $GRAFANA_SECRET_KEY
  FEATURE_PROMETHEUS_EXPORTER_ENABLED: ${FEATURE_PROMETHEUS_EXPORTER_ENABLED:-false}
  PROMETHEUS_EXPORTER_SECRET: ${PROMETHEUS_EXPORTER_SECRET:-}
  REDIS_URI: redis://redis:6379/0
  DJANGO_SETTINGS_MODULE: settings.hobby
  CELERY_WORKER_QUEUE: "default,critical,long,slack,telegram,webhook,retry,celery,grafana"
  CELERY_WORKER_CONCURRENCY: "1"
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "100"
  CELERY_WORKER_SHUTDOWN_INTERVAL: "65m"
  CELERY_WORKER_BEAT_ENABLED: "True"
  GRAFANA_API_URL: http://grafana:3000

services:
  engine:
    image: grafana/oncall
    container_name: grafana-oncall
    restart: always
    ports:
      - "8081:8080"
    command: sh -c "uwsgi --ini uwsgi.ini"
    environment: *oncall-environment
    networks:
      - backend
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      - oncall_db_migration
      - redis
      - celery

  celery:
    image: grafana/oncall
    restart: always
    command: sh -c "./celery_with_exporter.sh"
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    networks:
      - backend
    depends_on:
      - oncall_db_migration
      - redis

  oncall_db_migration:
    image: grafana/oncall
    container_name: oncall_db_migration
    command: python manage.py migrate --noinput
    environment: *oncall-environment
    networks:
      - backend
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      - redis

  redis:
    image: redis:7.0.15
    container_name: redis
    restart: always
    networks:
      - backend
    expose:
      - 6379
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: "0.5"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 5s
      interval: 5s
      retries: 10

volumes:
  oncall_data:
    driver: local
  redis_data:
    driver: local

networks:
  backend:
    external: true
