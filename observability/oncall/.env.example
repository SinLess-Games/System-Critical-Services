# .env.example for Grafana OnCall with MySQL, Redis, and RabbitMQ
# ================================================================
# This file contains all the environment variables required by the Grafana OnCall
# deployment. Update each variable with values appropriate for your environment.
# Once updated, copy this file to .env and ensure that Docker Compose loads it.

# -------------------------------------------------------------------
# Application Base and Security Settings
# -------------------------------------------------------------------
# DOMAIN:
#   The base URL (domain) to access the OnCall engine.
#   Example: myoncall.example.com
DOMAIN=myoncall.example.com

# SECRET_KEY:
#   A strong secret key used for cryptographic signing.
#   Generate one using a command such as:
#       python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secret-key-here

# -------------------------------------------------------------------
# RabbitMQ Settings
# -------------------------------------------------------------------
# RABBITMQ_USERNAME:
#   The username for RabbitMQ. (Default is "rabbitmq")
RABBITMQ_USERNAME=rabbitmq

# RABBITMQ_PASSWORD:
#   Set a secure password for RabbitMQ.
RABBITMQ_PASSWORD=your-rabbitmq-password

# -------------------------------------------------------------------
# MySQL Settings (for gmysql backend)
# -------------------------------------------------------------------
# MYSQL_PASSWORD:
#   The root password for your MySQL server.
MYSQL_PASSWORD=your-mysql-root-password

# MYSQL_USER:
#   The MySQL user to be used by OnCall. Defaults to "root" if not specified.
MYSQL_USER=root

# MYSQL_DB_NAME:
#   The name of the database OnCall will use.
MYSQL_DB_NAME=oncall_hobby

# MYSQL_HOST:
#   The hostname for the MySQL server.
MYSQL_HOST=mysql

# MYSQL_PORT:
#   The port number MySQL is listening on.
MYSQL_PORT=3306

# -------------------------------------------------------------------
# Redis Settings
# -------------------------------------------------------------------
# REDIS_URI:
#   The connection URI for Redis. The format is:
#       redis://<hostname>:<port>/<db-number>
REDIS_URI=redis://redis:6379/0

# -------------------------------------------------------------------
# Django & Celery Settings
# -------------------------------------------------------------------
# DJANGO_SETTINGS_MODULE:
#   The settings module used by the OnCall engine.
DJANGO_SETTINGS_MODULE=settings.hobby

# CELERY_WORKER_QUEUE:
#   A comma-separated list of queues for Celery workers.
CELERY_WORKER_QUEUE=default,critical,long,slack,telegram,webhook,retry,celery

# CELERY_WORKER_CONCURRENCY:
#   Number of concurrent worker processes.
CELERY_WORKER_CONCURRENCY=1

# CELERY_WORKER_MAX_TASKS_PER_CHILD:
#   Maximum tasks a worker will execute before restarting.
CELERY_WORKER_MAX_TASKS_PER_CHILD=100

# CELERY_WORKER_SHUTDOWN_INTERVAL:
#   Time interval after which a worker will shut down.
CELERY_WORKER_SHUTDOWN_INTERVAL=65m

# CELERY_WORKER_BEAT_ENABLED:
#   Enable the Celery beat scheduler (True/False).
CELERY_WORKER_BEAT_ENABLED=True

# -------------------------------------------------------------------
# Grafana API Settings
# -------------------------------------------------------------------
# GRAFANA_API_URL:
#   The URL to access the Grafana API.
GRAFANA_API_URL=http://grafana:3000

# -------------------------------------------------------------------
# Prometheus Exporter Settings (Optional)
# -------------------------------------------------------------------
# FEATURE_PROMETHEUS_EXPORTER_ENABLED:
#   Set to true to enable Prometheus exporter.
FEATURE_PROMETHEUS_EXPORTER_ENABLED=true

# PROMETHEUS_EXPORTER_SECRET:
#   A secret key used to secure Prometheus exporter endpoints.
PROMETHEUS_EXPORTER_SECRET=your-prometheus-exporter-secret

# -------------------------------------------------------------------
# Instructions:
# 1. Copy this file to .env: cp .env.example .env
# 2. Update each variable with the appropriate value for your environment.
# 3. Ensure that the .env file is loaded when you run Docker Compose.
