networks:
  frontend:
    external: true
  backend:
    external: true

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    networks:
      - backend
      - frontend
    volumes:
      - ./configs/prometheus:/etc/prometheus
    depends_on:
      - alertmanager
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    security_opt:
      - no-new-privileges:true

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "9093:9093"
    volumes:
      - ./configs/alertmanager.yaml:/etc/alertmanager/alertmanager.yml
    depends_on:
      - alertmanager-discord-notifier
    security_opt:
      - no-new-privileges:true

  alertmanager-discord-notifier:
    image: rogerrum/alertmanager-discord:1.0.6
    container_name: alertmanager-discord-notifier
    restart: unless-stopped
    networks:
      - backend
    environment:
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK}
      - DISCORD_USERNAME=System Critical Services Alert
      - DISCORD_AVATAR_URL=https://sinlessgamesllc.com/_next/image?url=%2Fimages%2F3.png&w=828&q=75
      - VERBOSE=ON
    ports:
      - "9094:9094"
    security_opt:
      - no-new-privileges:true

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    pid: host
    restart: always
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    networks:
      - backend
    ports:
      - "9100:9100"
    security_opt:
      - no-new-privileges:true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    volumes:
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices:
      - "/dev/kmsg"
    networks:
      - backend
    restart: unless-stopped