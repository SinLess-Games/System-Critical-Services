# Docker Compose configuration for Grafana OnCall and related services.
# This file defines networks, persistent volumes, shared environment variables,
# custom configurations, and all the required services.
################################################################################
# NETWORKS
################################################################################
networks:
  backend:
    external: true
  frontend:
    external: true

################################################################################
# VOLUMES
################################################################################
volumes:
  grafana-data:
    driver: local
  dbdata:
    driver: local

################################################################################
# CUSTOM CONFIGURATIONS
################################################################################
configs:
  grafana.ini:
    content: |
      [feature_toggles]
      accessControlOnCall = true

  my-cnf:
    content: |
      [client]
      user=exporter
      password=exporter_password
      host=192.168.1.3
      port=3306

################################################################################
# SERVICES
################################################################################
services:
  ########################################
  # MySQL Database Service for Grafana and OnCall
  ########################################
  grafana-db:
    image: mysql:8.0.32
    container_name: grafana-db
    hostname: grafana-db
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=Grafana-DB"
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    command: >-
      --character-set-server=utf8mb4
    restart: always
    networks:
      - backend
    ports:
      - 3306:3306
    volumes:
      - ./.data/mysql:/var/lib/mysql
      - ./configs/mysql-init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: oncall_hobby
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p$MYSQL_ROOT_PASSWORD"]
      timeout: 40s
      retries: 10

  ########################################
  # Grafana Service for Visualization and Dashboards
  ########################################
  grafana:
    image: "grafana/grafana:11.4.0"
    container_name: grafana
    privileged: true
    restart: always
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=Grafana"
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    ports:
      - 3001:3000
    depends_on:
      grafana-db:
        condition: service_healthy
    networks:
      - backend
      - frontend
    environment:
      SECRET_KEY: $GRAFANA_SECRET_KEY
      GF_DATABASE_TYPE: mysql
      GF_DATABASE_HOST: grafana-db
      GF_DATABASE_USER: ${MYSQL_USER:-root}
      GF_DATABASE_PASSWORD: ${MYSQL_ROOT_PASSWORD:?err}
      GF_FEATURE_TOGGLES_ENABLE: externalServiceAccounts
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-admin}
      GF_ONCALL_API_URL: http://oncall-engine:8084
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: grafana-oncall-app,grafana-pyroscope-app
      GF_INSTALL_PLUGINS: grafana-oncall-app,grafana-pyroscope-app,grafana-github-datasource,netdatacloud-netdata-datasource,grafana-clock-panel,grafana-exploretraces-app,grafana-llm-app
      GF_AUTH_MANAGED_SERVICE_ACCOUNTS_ENABLED: 'true'
      GF_LOKI_URL: http://loki:3100
      GF_TEMPO_URL: http://tempo:3200
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      DS_PROMETHEUS: http://prometheus:9090
      INFLUX_USER: ${INFLUX_USER:-admin}
      INFLUX_PASSWORD: ${INFLUX_PASSWORD:-admin}
      INFLUX_TOKEN: ${INFLUX_TOKEN:?err}
      GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
    configs:
      - source: grafana.ini
        target: /etc/grafana/grafana.ini
    volumes:
      - ./plugins/oncall.yaml:/etc/grafana/provisioning/plugins/oncall.yaml
      - ./dashboards:/etc/grafana/provisioning/dashboards
      - ./configs/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./configs/grafana.yaml:/etc/grafana/grafana.yaml
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: "0.5"

  ########################################
  # MySQL Exporter Service
  ########################################
  grafana-mysql-exporter:
    image: prom/mysqld-exporter
    container_name: grafana-mysql-exporter
    hostname: grafana-mysql-exporter
    command: ["--config.my-cnf=/home/mysqld_exporter/.my.cnf"]
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=Grafana-MYSQL-Exporter"
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    ports:
      - "9104:9104"
    networks:
      - backend
    restart: unless-stopped
    links:
      - grafana-db
    depends_on:
      grafana-db:
        condition: service_healthy
    configs:
      - source: my-cnf
        target: /home/mysqld_exporter/.my.cnf
        mode: 0644
