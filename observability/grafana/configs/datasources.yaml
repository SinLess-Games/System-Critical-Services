datasources:
  # Prometheus data source configuration
  - name: Prometheus
    type: prometheus # Type of data source (Prometheus)
    access: proxy # Access method (proxy)
    url: http://prometheus:9090 # URL for accessing Prometheus
    basicAuth: false # Basic authentication is not enabled
    isDefault: true # Not the default data source
    version: 1 # Version of the data source
    uid: prometheus # Unique identifier for this data source

  # Loki data source configuration
  - name: Loki
    type: loki # Type of data source (Loki)
    access: proxy # Access method (proxy indicates Grafana will proxy the request)
    url: http://loki:3100 # URL for accessing Loki
    isDefault: true # Whether this is the default data source
    version: 1 # Version of the data source
    uid: loki # Unique identifier for this data source

  # Tempo data source configuration (used for tracing)
  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    url: http://tempo:3200  # Ensure this points to your Tempo service
    basicAuth: false
    isDefault: true
    version: 1
    editable: true
    apiVersion: 1
    uid: tempo
    jsonData:
      httpHeaderName1: "X-Scope-OrgID"
      tracesToLogs:
        datasourceUid: 'loki'  # Ensures integration with Loki logs
        filterByTraceID: true
        filterBySpanID: false
        tags: ['job', 'instance', 'pod', 'namespace']
      tracesToMetrics:
        datasourceUid: 'prometheus'  # Integrate traces with Prometheus metrics
        queries:
          - name: 'Service Latency'
            query: 'histogram_quantile(0.95, sum(rate(traces_spanmetrics_latency_bucket{service="$service"}[5m])) by (le))'
      nodeGraph:
        enabled: true  # Enables the Node Graph visualization
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
      spanBar:
        type: 'Duration'


  # Pyroscope data source configuration (for profiling)
  - name: Pyroscope
    type: grafana-pyroscope-datasource # Type of data source (Pyroscope)
    access: proxy # Access method (proxy)
    url: http://pyroscope:4040 # URL for accessing Pyroscope
    basicAuth: false # Basic authentication is not enabled
    isDefault: true # Not the default data source
    editable: true # The data source is not editable
    version: 1 # Version of the data source
    uid: pyroscope # Unique identifier for this data source

  # OpenTelemetry Collector data source configuration (for tracing)
  - name: OpenTelemetry Collector
    type: jaeger
    access: proxy
    url: http://opentelemetry-collector:16686  # Change from 14268 to 16686 (Jaeger's UI and API port)
    basicAuth: false
    isDefault: false  # Set to false, as Tempo should be the main tracing backend
    editable: true
    version: 1
    uid: otel
    jsonData:
      tracesToLogs:
        datasourceUid: 'loki'  # Enables linking traces to logs via Loki
        filterByTraceID: true
        filterBySpanID: false
        tags: ['service.name', 'instance', 'namespace']
      tracesToMetrics:
        datasourceUid: 'prometheus'  # Enables linking traces to metrics via Prometheus
        queries:
          - name: 'Service Latency'
            query: 'histogram_quantile(0.95, sum(rate(traces_spanmetrics_latency_bucket{service="$service"}[5m])) by (le))'
      nodeGraph:
        enabled: true  # Enables visualization of trace dependencies
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
      spanBar:
        type: 'Duration'
    secureJsonData:
      httpHeaderValue1: "tenant1"


  - name: InfluxDB
    type: influxdb # Type of data source (InfluxDB)
    access: proxy # Access method (proxy)
    url: http://influxdb.sinlessgamesllc.com # URL for accessing InfluxDB
    basicAuth: true # Basic authentication is not enabled
    editable: true # The data source is not editable
    isDefault: true # Not the default data source
    version: 1 # Version of the data source
    uid: influxdb # Unique identifier for this data source
    jsonData:
      timeInterval: "5s"
      defaultBucket: "proxmox"
      tlsSkipVerify: true
      # httpHeaderName1: "Authorization"
    secureJsonData:
      password: ${INFLUX_PASSWORD}
      user: ${INFLUX_USER}
      token: "Token ${INFLUX_TOKEN}"
  
  - name: Github Data
    type: grafana-github-datasource
    editable: true
    jsonData:
      selectedAuthType: personal-access-token
    secureJsonData:
      accessToken: ${GITHUB_ACCESS_TOKEN}

  - name: 'Grafana Database'
    type: mysql
    url: mysql:3306
    user: root
    isDefault: true
    jsonData:
      database: grafana
      maxOpenConns: 100
      maxIdleConns: 100
      maxIdleConnsAuto: true
      connMaxLifetime: 14400
    secureJsonData:
      password: ${MYSQL_ROOT_PASSWORD}

