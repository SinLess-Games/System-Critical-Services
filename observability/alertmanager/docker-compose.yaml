################################################################################
# NETWORKS
################################################################################
networks:
  # 'backend' network is used for internal communication between services.
  backend:
    external: true  # Assumes an externally created network named 'backend' exists.
  # 'frontend' network is used to expose certain services to external clients.
  frontend:
    external: true  # Assumes an externally created network named 'frontend' exists.

services:
  ########################################
  # Alertmanager Service for Alerting
  ########################################
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=Alertmanager" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    networks:
      - backend
      - frontend
    ports:
      - "9093:9093"
    volumes:
      - ./configs/alertmanager.yaml:/etc/alertmanager/alertmanager.yml
    depends_on:
      - alertmanager-discord-notifier
    security_opt:
      - no-new-privileges:true

  ########################################
  # Alertmanager Discord Notifier Service
  ########################################
  alertmanager-discord-notifier:
    image: rogerrum/alertmanager-discord:1.0.7
    container_name: alertmanager-discord-notifier
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container_name=Alertmanager-Discord-Notifier" # Change this to your the name of your container
        loki-retries: 2
        loki-max-backoff: 800ms
        loki-timeout: 1s
        keep-file: "true"
        mode: "non-blocking"
    networks:
      - backend
      - frontend
    environment:
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK}
      - DISCORD_USERNAME=Sinless-AlertManager
    ports:
      - "9094:9094"
    security_opt:
      - no-new-privileges:true
