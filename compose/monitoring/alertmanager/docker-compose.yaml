################################################################################
# NETWORKS
################################################################################
networks:
  backend:
    external: true
  frontend:
    external: true
  management:
    external: true

services:
  ########################################
  # Alertmanager Service for Alerting
  ########################################
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped

    # Attach to all 3 networks so Traefik can route, and services can reach it
    networks:
      - backend
      - frontend
      - management

    # No host port; reach via Traefik at https://alertmanager.${LOCAL_DOMAIN}
    # ports:
    #   - "9093:9093"

    env_file:
      - ../../secrets/.env.runtime

    volumes:
      - ./configs/alertmanager.yaml:/etc/alertmanager/alertmanager.yml:ro

    depends_on:
      alertmanager-discord-notifier:
        condition: service_started

    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9093/-/ready >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s

    security_opt:
      - no-new-privileges:true

    labels:
      # ---- Traefik (internal) ----
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.${LOCAL_DOMAIN}`)"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"

      # ---- Homepage ----
      - "homepage.group=Monitoring"
      - "homepage.name=Alertmanager"
      - "homepage.icon=alertmanager"
      - "homepage.description=Receives and routes Prometheus alerts"
      - "homepage.href=https://alertmanager.${LOCAL_DOMAIN}"
      - "homepage.widget.type=container"
      - "homepage.widget.container=alertmanager"
      - "homepage.weight=11"

      # ---- Watchtower ----
      - "com.centurylinklabs.watchtower.enable=true"

    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container=alertmanager,service=monitoring,env=prod"
        loki-retries: "2"
        loki-max-backoff: "800ms"
        loki-timeout: "1s"
        keep-file: "true"
        mode: "non-blocking"

  ########################################
  # Alertmanager Discord Notifier Service
  ########################################
  alertmanager-discord-notifier:
    image: rogerrum/alertmanager-discord:1.0.7
    container_name: alertmanager-discord-notifier
    restart: unless-stopped

    networks:
      - backend
      - management

    # Internal only; Alertmanager will POST to http://alertmanager-discord-notifier:9094
    # No host port exposure
    # ports:
    #   - "9094:9094"

    env_file:
      - ../../secrets/.env.runtime
    environment:
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK}
      - DISCORD_USERNAME=${DISCORD_USERNAME:-Alertmanager}
    healthcheck:
      # The image serves HTTP on 9094; basic probe
      test: ["CMD-SHELL", "wget -qO- http://localhost:9094/ >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s

    security_opt:
      - no-new-privileges:true

    labels:
      - "homepage.group=Monitoring"
      - "homepage.name=Alert â†’ Discord Relay"
      - "homepage.icon=discord"
      - "homepage.description=Forwards Alertmanager notifications to Discord"
      - "com.centurylinklabs.watchtower.enable=true"

    logging:
      driver: loki
      options:
        loki-url: "http://192.168.1.3:3100/loki/api/v1/push"
        loki-external-labels: "container=alertmanager-discord-notifier,service=monitoring,env=prod"
        loki-retries: "2"
        loki-max-backoff: "800ms"
        loki-timeout: "1s"
        keep-file: "true"
        mode: "non-blocking"