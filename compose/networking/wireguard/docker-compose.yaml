networks:
  frontend:
    external: true
  backend:
    external: true
  management:
    external: true

services:
  # ------------------------------------------------------------
  # WireGuard VPN server (linuxserver/wireguard)
  # UDP 51820 exposed on the host for client connections.
  # Configurable entirely via your SOPS runtime env file.
  # ------------------------------------------------------------
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    restart: unless-stopped

    cap_add:
      - NET_ADMIN
      - SYS_MODULE

    sysctls:
      net.ipv4.ip_forward: "1"
      net.ipv6.conf.all.disable_ipv6: "0"

    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SERVERPORT=${SERVERPORT}
      - PEERS=${PEERS}
      - PEERDNS=${PEERDNS}
      - INTERNAL_SUBNET=${INTERNAL_SUBNET}
      - ALLOWEDIPS=${ALLOWEDIPS}
      # Optional (if you use DDNS/FQDN): SERVERURL=${SERVERURL}

    env_file:
      - ../../secrets/.env.runtime

    volumes:
      - ./config:/config
      - /lib/modules:/lib/modules:ro

    # WireGuard UDP endpoint
    ports:
      - "${SERVERPORT}:${SERVERPORT}/udp"

    networks:
      - backend
      - management

    healthcheck:
      test: ["CMD-SHELL", "wg show || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

    # Homepage auto-discovery (internal link to the dashboard service below)
    labels:
      - "homepage.group=Networking"
      - "homepage.name=WireGuard"
      - "homepage.icon=wireguard"
      - "homepage.description=Site-to-site and remote admin VPN"
      - "homepage.href=https://wg.${LOCAL_DOMAIN}"
      - "homepage.weight=10"
      - "com.centurylinklabs.watchtower.enable=true"

  # ------------------------------------------------------------
  # WireGuard Dashboard (wg-easy)
  # Exposed internally via Traefik at: https://wg.${LOCAL_DOMAIN}
  # NO host port published; routed only through Traefik/Cloudflared.
  # ------------------------------------------------------------
  wg-easy:
    image: weejewel/wg-easy:latest
    container_name: wg-easy
    restart: unless-stopped

    depends_on:
      - wireguard

    environment:
      # Required for admin UI login. Put a strong value in secrets/env.sops.yaml
      - PASSWORD=${WG_EASY_PASSWORD}
      # Optional: set your external hostname/IP for client configs
      # - WG_HOST=${WG_HOST}
      # Optional: listen port (defaults to 51820; should match wireguard)
      - WG_PORT=${SERVERPORT}
      # Persist peers & server config alongside wireguard’s config
      - WG_CONF_PATH=/etc/wireguard

    env_file:
      - ../../secrets/.env.runtime

    volumes:
      # Share the same config so wg-easy manages peers directly
      - ./config:/etc/wireguard

    # Do NOT expose wg-easy’s web port to host; we route via Traefik
    # Web UI default internal port = 51821
    networks:
      - management
      - backend
      - frontend

    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:51821/ >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s

    labels:
      # ---- Traefik (internal) ----
      - "traefik.enable=true"
      - "traefik.http.routers.wgeasy.rule=Host(`wg.${LOCAL_DOMAIN}`)"
      - "traefik.http.routers.wgeasy.entrypoints=websecure"
      - "traefik.http.routers.wgeasy.tls=true"
      - "traefik.http.services.wgeasy.loadbalancer.server.port=51821"

      # ---- Homepage auto-discovery ----
      - "homepage.group=Networking"
      - "homepage.name=WireGuard Dashboard"
      - "homepage.icon=wireguard"
      - "homepage.description=Manage peers, configs, and QR codes"
      - "homepage.href=https://wg.${LOCAL_DOMAIN}"
      - "homepage.weight=9"

      # Optional widget (shows container info on Homepage)
      - "homepage.widget.type=container"
      - "homepage.widget.container=wg-easy"

      # Watchtower
      - "com.centurylinklabs.watchtower.enable=true"